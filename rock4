def func1(arg1, arg2):
    var33 = var5(arg1, arg2)
    var38 = func10(arg2, arg1)
    def func11(arg39, arg40):
        var41 = arg40 | (-1877682023 + -205 - arg2)
        var42 = var33 | 239 | var38
        var43 = (var42 ^ arg2 + arg40) ^ -112
        var44 = var43 ^ -641 + var38 + arg40
        var45 = ((arg1 - 66) & arg2) | var44
        var46 = (var45 + (var45 + arg1)) & var44
        var47 = arg39 ^ arg1 - var41 | 538551694
        if var42 < var47:
            var48 = arg39 + var47
        else:
            var48 = var41 + (arg40 & var47) ^ arg40
        var49 = var41 + -991617713
        if var44 < var43:
            var50 = (arg2 & var33) & var46 ^ var43
        else:
            var50 = var46 ^ (var43 - arg40 + 476699207)
        if var44 < arg39:
            var51 = arg39 + var43 & arg1 ^ var41
        else:
            var51 = arg1 + arg40 ^ (var41 | arg1)
        var52 = var45 | var47
        var53 = var49 ^ var43
        var54 = var41 - var41
        var55 = (var53 - var45 ^ var44) + arg2
        var56 = var52 ^ var38 - var49 + arg1
        var57 = var49 & var38 + 922 + var49
        var58 = ((var49 | var56) - arg1) + var47
        result = (((var56 - var44) + arg40 & var38) + var44) & var44
        return result
    var59 = func11(var38, arg2)
    var60 = arg1 ^ var33
    var61 = 745934705 ^ (arg1 | var38) | 234 | var38 ^ arg1 + arg1 + 151694900 + var33
    result = (var59 & arg1) & var61
    return result
def func10(arg34, arg35):
    var36 = 0
    for var37 in xrange(40):
        var36 += (1 | var37) + var37
    return var36
def func4(arg6, arg7):
    var22 = func5(arg6, arg7)
    if arg7 < var22:
        var27 = class6()
    else:
        var27 = class8()
    for var28 in xrange(17):
        var27.func7(var22, arg6)
    var29 = var22 - (arg7 & -65) | (var22 | arg6 - ((arg6 + (var22 | (arg6 | arg6)) + (var22 - (1575453204 + (arg6 - -1505116115 ^ -1716318452 + 237540412 | arg6)) - var22) + 280 + -192297366) + var22) + (arg7 | arg7))
    var30 = 768144417 | (-706 ^ (1395519554 ^ ((1115525743 + -747659587) - arg7 + (var22 | var22) | (1973595283 + var22 ^ arg6) & -606 + var22 - arg6)) ^ (arg6 - (var22 & (850 + -490021424))) & var29) & 2142809359 ^ var22 - var29
    var31 = arg7 & arg6 & 80 + -965636444
    var32 = (var30 - arg7) ^ (arg6 + 1732784287)
    result = (var32 + var22) & (-466532994 ^ var32 | ((var29 | (arg7 | var29 & var22)) + ((arg6 & var29 & 331) + arg7)))
    return result
class class8(object):
    def func7(self, arg25, arg26):
        return 0
class class6(class8):
    def func7(self, arg23, arg24):
        result = 0 - arg23
        return result
def func5(arg8, arg9):
    var10 = -201 - ((41 + 1159369731) + 1711286380)
    var11 = (-1807101844 & arg9 | arg8) - -473
    var12 = (arg9 & var10) | arg9
    var13 = ((var12 ^ var10) - arg9) - var10
    var14 = -118 ^ var13 ^ -59630598 ^ arg8
    if var10 < var12:
        var15 = var10 & var10
    else:
        var15 = (var13 + (var12 + var13)) - arg9
    var16 = var14 | 232
    var17 = var16 & arg9 | -976
    if var17 < var13:
        var18 = var12 - var17
    else:
        var18 = var10 ^ var10
    var19 = (arg9 | var17) | -666 + 640800824
    var20 = var17 | (var10 + var10 & var19)
    var21 = arg8 - arg8
    result = var10 | -878 ^ var17
    return result
def func3():
    closure = [-10]
    def func2(arg3, arg4):
        closure[0] += func4(arg3, arg4)
        return closure[0]
    func = func2
    return func
var5 = func3()
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 62'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
